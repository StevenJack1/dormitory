<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringPlaceholdersInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          p:user="${jdbc.userName}"
          p:password="${jdbc.password}"
          p:driverClass="${jdbc.driverClass}"
          p:jdbcUrl="${jdbc.connectionURL}"
          p:checkoutTimeout="${jdbc.checkoutTimeout}"
          p:idleConnectionTestPeriod="${jdbc.idleConnectionTestPeriod}"
          p:initialPoolSize="${jdbc.initialPoolSize}"
          p:maxIdleTime="${jdbc.maxIdleTime}"
          p:maxPoolSize="${jdbc.maxPoolSize}"
          p:minPoolSize="${jdbc.minPoolSize}"
          p:maxStatements="${jdbc.maxStatements}"
          p:autoCommitOnClose="${jdbc.autoCommitOnClose}"
    />
    <!-- jpa Entity Factory 配置 -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="cn.stevenjack.dormitory.Model"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <!-- 配置 JPA 的基本属性. 例如 JPA 实现产品的属性 -->
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!--生产环境关闭show sql，format sql-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop><!--validate update-->
                <prop key="cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory
                </prop>
                <prop key="cache.use_query_cache">true</prop>
                <prop key="connection.isolation">2</prop>
                <prop key="use_identifier_rollback">true</prop>
                <prop key="hibernate.c3p0.max_size">20</prop>
                <prop key="hibernate.c3p0.min_size">1</prop>
                <prop key="c3p0.acquire_increment">2</prop>
                <!--多长时间检测一次池内的所有链接对象是否超时-->
                <prop key="c3p0.idle_test_period">2000</prop>
                <prop key="c3p0.timeout">2000</prop>
                <!--缓存 Statement 对象的数量-->
                <prop key="c3p0.max_statements">10</prop>
                <!-- 设定 JDBC 的 Statement 读取数据的时候每次从数据库中取出的记录条数 MySql不支持-->
                <prop key="hibernate.jdbc.fetch_size">100</prop>
                <!-- 设定对数据库进行批量删除，批量更新和批量插入的时候的批次大小 MySql不支持-->
                <prop key="jdbc.batch_size">30</prop>
            </props>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <!-- 配置 JPA 使用的事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"/>

    <!-- 配置支持基于注解式事务配置 注解方式配置@EnableTransactionManager -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 2. 配置事务属性, 需要事务管理器 -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>-->

    <!--3. 配置事务切点, 并把切点和事务属性关联起来 -->
    <!--<aop:config>
        <aop:pointcut expression="execution(* com.zhangzhihao.SpringMVCSeedProject.Dao.*.*(..))"
                      id="txPointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>-->


    <!-- 配置数据源 -->
    <!-- 导入资源文件 -->

    <!-- 开发环境配置文件 -->
    <beans profile="development">
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:development/db.properties</value>
                </list>
            </property>
            <property name="ignoreUnresolvablePlaceholders" value="true"/>
        </bean>
    </beans>

    <!-- 测试环境配置文件 -->
    <beans profile="test">
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:test/db.properties</value>
                </list>
            </property>
            <property name="ignoreUnresolvablePlaceholders" value="true"/>
        </bean>
    </beans>

    <!-- 生产环境配置文件 -->
    <beans profile="production">
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:production/db.properties</value>
                </list>
            </property>
            <property name="ignoreUnresolvablePlaceholders" value="true"/>
        </bean>
    </beans>

</beans>